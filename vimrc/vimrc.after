" size of a hard tabstop
set tabstop=4

" size of an "indent"
set shiftwidth=4

" a combination of spaces and tabs are used to simulate tab stops at a width
" other than the (hard)tabstop
set softtabstop=4

" Set Auto Indent on
set autoindent
set smartindent
set expandtab

syntax on
set nu
"set relativenumber

set hlsearch

set synmaxcol=300
set laststatus=2
"set visualbell

set undofile
set colorcolumn=90

set gdefault

command P w | !python %
command G w | !gcc % -o %.o;%.o
command F w | !firefox %
command E w | !. %

nnoremap <tab> %
vnoremap <tab> %

"I hit F1 instead of esc sometimes
map! <F1> <ESC>
nnoremap <F1> <ESC>
cnoremap <F1> <ESC>
map! <F2> <ESC>
map! <F8> <ESC>
map! <F7> <ESC>
inoremap `` <ESC>
cnoremap `` <ESC>
inoremap jj <ESC>
cnoremap jj <ESC>
inoremap 0w <ESC>:w<CR>
nnoremap 0w <ESC>:w<CR>

nnoremap ; :

nnoremap <silent> <leader>FF :Ack<space>
nnoremap <silent> <leader><space> :Ack<space>
nnoremap <silent> 9<space> :Ack<space>

" Esc key is far out of my hand, 'jj' insetad

nmap wt :TagbarToggle<CR>

nmap <silent> ,s <C-w>s
nmap <silent> ,l <C-w>l
nmap <silent> ,j <C-w>j
nmap <silent> ,k <C-w>k
nmap <silent> ,h <C-w>h
nmap <silent> ,v <C-w>v
nmap <silent> ,q <C-w>q
nmap <silent> ,9 <C-w><C-]><C-w>L
nmap <silent> ws <C-w>s
nmap <silent> wl <C-w>l
nmap <silent> wj <C-w>j
nmap <silent> wk <C-w>k
nmap <silent> wh <C-w>h
nmap <silent> wv <C-w>v
nmap <silent> wq <C-w>q
nmap <silent> w9 <C-w><C-]><C-w>L
nmap <silent> wg <C-w>f<C-w>L

cmap oa :CtrlP<CR>
nmap <silent> <leader>p :CtrlP<CR>

set cpoptions+=$
nmap <silent> th gT<CR>
nmap <silent> tl gt<CR>
nmap <silent> <C-Left> gT<CR>
nmap <silent> <C-Right> gt<CR>
nmap <silent> te :tabedit 
nmap <silent> tf :tabfind 
nmap <silent> tq :tabclose<CR>
nmap <silent> t0 :tabfirst<CR>
nmap <silent> t$ :tablast<CR>
nmap <silent> tt gt
nmap <silent> tw <C-w>T
nmap <silent> tn :tabnew<CR>
nmap <silent> t9 <C-w><C-]><C-w>T
nmap <silent> tg <C-w>gf
nnoremap <silent> tH :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> tL :execute 'silent! tabmove ' . tabpagenr()<CR>
nnoremap <silent> <A-Left> :execute 'silent! tabmove ' . (tabpagenr()-2)<CR>
nnoremap <silent> <A-Right> :execute 'silent! tabmove ' . tabpagenr()<CR>

nmap <silent> 99 <C-]>
nmap <silent> 9v <C-w>v<C-w>l<C-]>
nmap <silent> 9h <C-o>
nmap <silent> 9f :Ack <C-r><C-w> %:p:h<CR>
nmap <silent> 9pf :Ack <C-r><C-w> %:p:h:h<CR>
nmap <silent> 9ppf :Ack <C-r><C-w> %:p:h:h:h<CR>
nmap <silent> 9pppf :Ack <C-r><C-w> %:p:h:h:h:h<CR>
nmap <silent> 9ppppf :Ack <C-r><C-w> %:p:h:h:h:h:h<CR>
nmap <silent> <C-d> :colorscheme default<CR>
nmap <silent> 9n :cnext<CR>
nmap <silent> 9N :cprev<CR>
nmap <silent> 9p :cprev<CR>

cmap Cword <C-r><C-w>
cnoremap <leader>cw <C-r><C-w>
cmap Cfile <C-r>%
cnoremap <leader>cf <C-r>%

nnoremap <leader>gw :Gwrite<CR>

inoremap <F9> <C-O>za
nnoremap <F9> za
onoremap <F9> <C-C>za
vnoremap <F9> zf

vnoremap <leader>c yo<C-R>=system('<C-r>"')<CR>

command Ses :source .session.vim~
command Vimrc e ~/.vimrc.after
command Sh setlocal nospell | highlight ExtraWhitespace guibg=#F9F5FF | ConqueTerm bash
command Note tabnew | lcd ~/git/myScripts/notes/

nnoremap <leader>r :ConqueTerm 
nnoremap <leader>ru :ConqueTerm 

set wildmode=longest,list

set background=light

set nf=octal,hex,alpha

" source .../.vimrc and use .../tags in ancestor of source directory.
" useful when you have source tree eight fathom deep,
" an exercise in vim loops.
let parent=1
let local_vimrc = ".vimrc"
let local_tags = "tags"
while parent <= 8
  if filewritable(local_vimrc)
"    echomsg "sourcing " . local_vimrc
"    exe ":so " . local_vimrc
  endif
  let local_vimrc = "../". local_vimrc
  let local_tags = "../". local_tags
  exe ":set tags+=".local_tags
  let parent = parent+1
  " todo: stop at the root on any system and also ~ on unix.
endwhile
unlet parent local_vimrc

" session and backup
"au focuslost * :wa
au vimleavepre * :mksession!.session.vim~
au bufwritepost,filewritepost * :silent !mkdir -p ~/Documents/gdrive/vim/`date +\%d\%b\%y` && cp <afile> ~/Documents/gdrive/vim/`date +\%d\%b\%y`

function Diffw()
    let opt = ""
     if &diffopt =~ "icase"
       let opt = opt . "-i "
     endif
     if &diffopt =~ "iwhite"
       let opt = opt . "-w " " vim uses -b by default
     endif
     silent execute "!diff -a --binary " . opt .
       \ v:fname_in . " " . v:fname_new .  " > " . v:fname_out
endfunction

set diffopt+=iwhite
set diffexpr=Diffw()
unmap ,hs

" auto-popup only pops-up, on keys and not cursor movement.
let g:acp_mappingdriven = 0

if has("gui_running")
  if has("gui_gtk2")
    set guifont=ubuntu\ mono\ 11
  elseif has("gui_macvim")
    set guifont=menlo\ regular:h13
  elseif has("gui_win32")
    set guifont=consolas:h11:cansi
  endif
endif

set nolist

